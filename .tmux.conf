##################################
# Chris Heithoff's .tmux.conf file
# Latest rev: 10/24/2017
##################################

#################################################
# Prefix choice
#   Many users who write stuff online prefer using C-a
# as the prefix.  I use C-a/C-e all the time at the
# shell command line, so I chose C-Space in order
# to preserve C-a at the command line.
# If I have a terminal application that also needs
# C-Space, then just hit it twice in a row.
#################################################
set -g prefix C-Space
bind C-Space send-prefix 

#################################
# Tmux option settings.
#   To see available options:
#    tmux show-options -g   (global settings)
#    tmux show-options -s   (session settings)
#    tmux show-options -wg  (global window settings)
#################################
# Keyboard shortcuts in copy mode
setw -g mode-keys   vi

# Keyboard shortcuts at the tmux command prompt (after <prefix>:)
set  -g status-keys emacs

# Mouse stuff (important!  tmux starting in v2.1 simplified the mouse mode)
#   (Beware of pre-v2.1 google results)
setw -g mouse on

set -g default-shell /usr/intel/bin/tcsh

# (From "tmux: Productive Mouse Free Development" by Brian Hogan.
# "tmux adds a very small delay when sending commands.  This delay
# might interfere with other programs such as Vim.  We can set this
# delay so it's much more responsive"   -s = session option
# Default is 500.  Is it better smaller?
set -s escape-time 1

# increase scrollback buffer size
set -g history-limit 50000

# display tmux messages for 3 seconds
set -g display-time 2000

# 256 color support 
#   To check that your terminal suports 256 colors:
#    wget https://raw.githubusercontent.com/vim-scripts/Colortest/master/colortest
#    perl colortest -w
# set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

# let tmux pass ctrl and shift commands to terminal
#  ??? is this necessary? ???
setw -g xterm-keys on

# Start window/pane numbers from 1 instead of 0.
set  -g base-index 1
setw -g pane-base-index 1


#############################################
##########  Key bindings ####################
##  -r : repeatable                         #
##  -n : no-prefix necessary                #
##  -T : use the following keymap table     #
#############################################
# Use semi-colon, instead of colon, for the tmux command prompt.
bind-key \; command-prompt 

# To toggle synchronized panes
bind-key y set synchronize-panes  \; display-message "Synchronize-panes = #{?synchronize-panes,ON,OFF}"

# Integration between Vim and Tmux navigations 
#  https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits (ctrl hjkl), plus ctrl / goes to last(previously use) pane
#  REQUIREMENT--> You must map control+hjkl to control-w + hjkl in Vim.
bind-key -n C-h run-shell "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run-shell "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run-shell "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run-shell "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind-key -n C-\ run-shell "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Preserve the shell ctrl-l bindkey for redrawing the screen (now prefix l)
bind-key l send-keys C-l

# hjkl for resizing panes
bind-key -r c-h resize-pane -L 5
bind-key -r c-j resize-pane -D 5
bind-key -r c-k resize-pane -U 5
bind-key -r c-l resize-pane -R 5

# Switch to other sessions from within tmux (instead of detaching and reattaching)
#  These are default, but not with the -r flag for repeating.
bind-key -r ( switch-client -p
bind-key -r ) switch-client -n

# Reload the .tmux.conf file easily
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded."

# Sending/getting panes to/from other windows.
# http://unix.stackexchange.com/questions/14300/tmux-move-window-to-pane
bind-key g command-prompt -p "get pane from window:"  "join-pane -s :'%%'"
bind-key s command-prompt -p "send pane to window:"   "join-pane -t :'%%'"

# Vim-bindings for copy mode (-t vi-copy means use the vi-copy key table)
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y'     copy-pipe "xclip -i"
bind-key -t vi-copy 'Enter' copy-pipe "xclip -i"

# Let the center click paste from the clipboard
#   Requires xclip to be installed on your Linux system
#    "xclip -o"  sends the contents of clipboard to STDOUT
#    "tmux load-buffer -b xclip -" takes the piped STDOUT and loads to a tmux buffer named xclip
#    "paste-buffer -b xclip -d"  pastes the buffer named xclip and then deletes it
bind-key -n MouseDown2Pane select-pane -t = \; run-shell 'xclip -o | tmux load-buffer -b xclip -' \; paste-buffer -b xclip -d

# Paste the buffer with prefix-P.  Note this is without the -t option
bind-key P paste-buffer

# Allow Pageup enter copy-mode (-e means to exit copy-mode when scroll back to bottom.  -u = move up )
#  Note that Shift-Pageup gets caught by Konsole before getting to Tmux.  
bind-key -n PPage copy-mode -eu


##################################################################
####  Color stuff          #######################################
#### (a lot taken from  https://gist.github.com/zolrath/2305333) #
##################################################################
#  Color of status bar
set -g status-fg white
set -g status-bg colour236

#  The status bar has three sections:  "left" "list of windows" "right"
set -g status-left-length 32
set -g status-right-length 150

# Appearance of status-left
# set -g status-left '#[fg=colour235,bg=colour172,bold]  #S #[fg=colour172,bg=colour236,nobold]#[fg=colour245,bg=colour236,bold] #(whoami) #[fg=colour236,bg=colour234,nobold]'
set -g status-left '#[fg=colour235,bg=colour103,bold]  #S #[fg=colour103,bg=colour236,nobold]#[fg=colour231,bg=colour236,bold] #(whoami) #[fg=colour236,bg=colour236,nobold]'

# Appearance of window-list (one format for current window.  another for others)
set -g window-status-current-format "#[fg=colour236,bg=colour110]#[fg=colour236,bg=colour110,noreverse,bold] #I #W #[fg=colour110,bg=colour236,nobold]"
set -g window-status-format "#[fg=231,bg=colour236] #I #W "
set -g window-status-activity-attr bold

# Appearance of outlines around panes
set -g pane-border-fg colour242
set -g pane-active-border-fg colour39

#  Appearance of messages
set -g message-fg colour16
set -g message-bg colour229
set -g message-attr bold

